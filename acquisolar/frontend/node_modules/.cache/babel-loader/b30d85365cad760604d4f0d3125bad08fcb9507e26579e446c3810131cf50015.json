{"ast":null,"code":"var _jsxFileName = \"/Users/leon/Documents/code/AcquiSolar/acquisolar/frontend/src/views/main.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport FileList from './filelist';\nimport PDFViewer from './pdfviewer';\n\n// Set the workerSrc for pdfjs\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\n// url of aws server and port 80\n// change to '' for localhost\n// const URL = 'http://54.90.226.66:80'\n// Changed this variable name or causes issues with other parts of code\nconst URLServer = '';\nconst Main = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [fileNames, setFileNames] = useState([]);\n  const [showSearch, setShowSearch] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [currentPdf, setCurrentPdf] = useState(null);\n  const [numPages, setNumPages] = useState(null);\n  const [instances, setInstances] = useState([]);\n  const [currentInstance, setCurrentInstance] = useState(0);\n  const [pageNumber, setPageNumber] = useState(1);\n  const findInstancesOfSearchTerm = async () => {\n    let instancesFound = [];\n    if (!currentPdf) return;\n    const pdfDocument = await pdfjs.getDocument(URL.createObjectURL(currentPdf)).promise;\n    for (let i = 1; i <= numPages; i++) {\n      const page = await pdfDocument.getPage(i);\n      const textContent = await page.getTextContent();\n      // Look for instances of the search term in the text content\n      textContent.items.forEach(item => {\n        if (item.str.includes(searchQuery)) {\n          instancesFound.push({\n            page: i,\n            instance: item.str\n          });\n        }\n      });\n    }\n    setInstances(instancesFound);\n    if (instancesFound.length > 0) {\n      setPageNumber(instancesFound[0].page); // Go to the first instance page\n    }\n  };\n  const goToNextInstance = () => {\n    if (instances.length === 0) return;\n    const nextInstance = (currentInstance + 1) % instances.length;\n    setCurrentInstance(nextInstance);\n    setPageNumber(instances[nextInstance].page);\n  };\n  const goToPreviousInstance = () => {\n    const nextInstance = (currentInstance - 1) % instances.length;\n    setCurrentInstance(nextInstance);\n    setPageNumber(instances[nextInstance].page);\n  };\n  const handleSearchInputChange = event => {\n    setSearchQuery(event.target.value);\n  };\n  const handleSearchSubmit = async () => {\n    if (!searchQuery) {\n      alert('Please enter a search query.');\n      return;\n    }\n    try {\n      const response = await fetch(URLServer + '/search', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: searchQuery\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log(data);\n      } else {\n        console.error('Search failed', response);\n      }\n    } catch (error) {\n      console.error('Error during search', error);\n    }\n    findInstancesOfSearchTerm();\n  };\n  const onDrop = useCallback(acceptedFiles => {\n    // Prevents duplicates from being uploaded (based on filename atm)\n    const filteredFiles = acceptedFiles.filter(file => file.type === 'application/pdf');\n    setFiles(prevFiles => [...prevFiles, ...filteredFiles]);\n\n    // If there's no currently selected PDF, display the first one dropped\n    if (filteredFiles.length && !currentPdf) {\n      setCurrentPdf(filteredFiles[0]);\n    }\n\n    // Filenames that are displayed when file is uploaded\n    setFileNames(prevFiles => {\n      const newFileNames = filteredFiles.map(file => file.name);\n      const existingFileNames = new Set(prevFiles);\n      const uniqueNewFileNames = newFileNames.filter(fileName => !existingFileNames.has(fileName));\n      return [...prevFiles, ...uniqueNewFileNames];\n    });\n  }, [currentPdf]);\n  const onDocumentLoadSuccess = ({\n    numPages\n  }) => {\n    setNumPages(numPages);\n  };\n  const removeFile = (fileName, event) => {\n    event.stopPropagation(); // Prevent the event from bubbling up to parent elements\n\n    setFiles(prevFiles => prevFiles.filter(file => file.name !== fileName));\n    setFileNames(prevFileNames => prevFileNames.filter(name => name !== fileName));\n  };\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    // Only allows pdfs\n    accept: 'application/pdf',\n    onDrop\n  });\n  const uploadFilesToServer = async () => {\n    if (files.length === 0) {\n      alert('Please submit a file.');\n      return;\n    }\n    setShowSearch(true);\n    const formData = new FormData();\n\n    // Append each file to the form data\n    files.forEach(file => {\n      formData.append('files', file);\n    });\n    console.log(formData);\n    try {\n      const response = await fetch(URLServer + '/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        console.log('Files successfully uploaded');\n      } else {\n        console.error('Upload failed', response);\n      }\n    } catch (error) {\n      console.error('Error uploading files', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      style: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: styles.title,\n        children: \"AcquiSolar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/about\",\n        style: styles.aboutLink,\n        children: \"About Us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.mainContent,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ...getRootProps({\n          style: styles.dropzone\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.uploadHeader,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: styles.uploadText,\n            children: \"Upload Files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: styles.addButton,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FileList, {\n          fileNames: fileNames,\n          removeFile: removeFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PDFViewer, {\n        showSearch: showSearch,\n        currentPdf: currentPdf,\n        numPages: numPages,\n        searchQuery: searchQuery,\n        handleSearchInputChange: handleSearchInputChange,\n        handleSearchSubmit: handleSearchSubmit,\n        onDocumentLoadSuccess: onDocumentLoadSuccess,\n        instances: instances,\n        currentInstance: currentInstance,\n        findInstancesOfSearchTerm: findInstancesOfSearchTerm,\n        goToNextInstance: goToNextInstance,\n        goToPreviousInstance: goToPreviousInstance,\n        pageNumber: pageNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), !showSearch && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.dragTextContainer,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: styles.dragText,\n          children: \"Add your files in the box on the left and click Submit.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), !showSearch && /*#__PURE__*/_jsxDEV(\"button\", {\n      style: styles.submitButton,\n      onClick: uploadFilesToServer,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"JP3igTy0hXf/QLac1FXBs7EIHS4=\", false, function () {\n  return [useDropzone];\n});\n_c = Main;\nconst styles = {\n  container: {\n    fontFamily: 'Arial, sans-serif',\n    height: '100vh',\n    width: '100%',\n    backgroundColor: '#9ACAC4',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start'\n  },\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '20px',\n    color: 'white',\n    fontSize: '24px'\n  },\n  title: {\n    margin: 0\n  },\n  aboutLink: {\n    color: 'white',\n    textDecoration: 'none',\n    backgroundColor: '#9ACAC4',\n    padding: '5px 10px',\n    borderRadius: '5px'\n  },\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    padding: '20px',\n    paddingTop: '10px',\n    width: '100%'\n  },\n  dropzone: {\n    padding: '20px',\n    width: '300px',\n    height: '400px',\n    borderRadius: '15px',\n    backgroundColor: '#ffffff',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: '10px'\n  },\n  uploadText: {\n    color: '#000000',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    marginBottom: '10px',\n    fontSize: '18px',\n    fontWeight: 'bold'\n  },\n  submitButton: {\n    padding: '10px 20px',\n    marginLeft: '20px',\n    fontSize: '16px',\n    backgroundColor: '#FFF',\n    border: 'none',\n    borderRadius: '20px',\n    cursor: 'pointer',\n    color: 'black',\n    alignSelf: 'flex-start',\n    fontWeight: 'bold'\n  },\n  addButton: {\n    marginLeft: '10px',\n    padding: '5px 10px',\n    fontSize: '16px',\n    backgroundColor: '#FFF',\n    border: '1px solid #000',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    fontWeight: 'bold'\n  },\n  uploadHeader: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%',\n    padding: '0 20px',\n    marginBottom: '10px'\n  },\n  mainContent: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '20px',\n    paddingTop: '10px'\n  },\n  dragTextContainer: {\n    marginLeft: '20px',\n    fontSize: '24px',\n    marginRight: '15%',\n    fontWeight: 'bold',\n    color: '#FFF',\n    maxWidth: '400px',\n    textAlign: 'left'\n  }\n};\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useCallback","useState","useDropzone","Document","Page","pdfjs","FileList","PDFViewer","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","version","URLServer","Main","_s","files","setFiles","fileNames","setFileNames","showSearch","setShowSearch","searchQuery","setSearchQuery","currentPdf","setCurrentPdf","numPages","setNumPages","instances","setInstances","currentInstance","setCurrentInstance","pageNumber","setPageNumber","findInstancesOfSearchTerm","instancesFound","pdfDocument","getDocument","URL","createObjectURL","promise","i","page","getPage","textContent","getTextContent","items","forEach","item","str","includes","push","instance","length","goToNextInstance","nextInstance","goToPreviousInstance","handleSearchInputChange","event","target","value","handleSearchSubmit","alert","response","fetch","method","headers","body","JSON","stringify","query","ok","data","json","console","log","error","onDrop","acceptedFiles","filteredFiles","filter","file","type","prevFiles","newFileNames","map","name","existingFileNames","Set","uniqueNewFileNames","fileName","has","onDocumentLoadSuccess","removeFile","stopPropagation","prevFileNames","getRootProps","getInputProps","accept","uploadFilesToServer","formData","FormData","append","style","styles","container","children","header","title","_jsxFileName","lineNumber","columnNumber","href","aboutLink","mainContent","dropzone","uploadHeader","uploadText","addButton","dragTextContainer","dragText","submitButton","onClick","_c","fontFamily","height","width","backgroundColor","display","flexDirection","justifyContent","alignItems","padding","color","fontSize","margin","textDecoration","borderRadius","content","paddingTop","marginBottom","fontWeight","marginLeft","border","cursor","alignSelf","marginRight","maxWidth","textAlign","$RefreshReg$"],"sources":["/Users/leon/Documents/code/AcquiSolar/acquisolar/frontend/src/views/main.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport FileList from './filelist';\nimport PDFViewer from './pdfviewer';\n\n// Set the workerSrc for pdfjs\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\n// url of aws server and port 80\n// change to '' for localhost\n// const URL = 'http://54.90.226.66:80'\n// Changed this variable name or causes issues with other parts of code\nconst URLServer = ''\n\nconst Main = () => {\n  const [files, setFiles] = useState([]);\n  const [fileNames, setFileNames] = useState([]);\n  const [showSearch, setShowSearch] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [currentPdf, setCurrentPdf] = useState(null);\n  const [numPages, setNumPages] = useState(null); \n  const [instances, setInstances] = useState([]);\n  const [currentInstance, setCurrentInstance] = useState(0);\n  const [pageNumber, setPageNumber] = useState(1);\n\n  const findInstancesOfSearchTerm = async () => {\n    let instancesFound = [];\n    if (!currentPdf) return;\n\n    const pdfDocument = await pdfjs.getDocument(URL.createObjectURL(currentPdf)).promise;\n\n    for (let i = 1; i <= numPages; i++) {\n      const page = await pdfDocument.getPage(i);\n      const textContent = await page.getTextContent();\n      // Look for instances of the search term in the text content\n      textContent.items.forEach((item) => {\n        if (item.str.includes(searchQuery)) {\n          instancesFound.push({ page: i, instance: item.str });\n        }\n      });\n    }\n    setInstances(instancesFound);\n    if (instancesFound.length > 0) {\n      setPageNumber(instancesFound[0].page); // Go to the first instance page\n    }\n  };\n\n  const goToNextInstance = () => {\n    if (instances.length === 0) return;\n    const nextInstance = (currentInstance + 1) % instances.length;\n    setCurrentInstance(nextInstance);\n    setPageNumber(instances[nextInstance].page);\n  };\n\n  const goToPreviousInstance = () => {\n    const nextInstance = (currentInstance - 1) % instances.length;\n    setCurrentInstance(nextInstance);\n    setPageNumber(instances[nextInstance].page);\n  };\n\n  \n  const handleSearchInputChange = (event) => {\n    setSearchQuery(event.target.value);\n  };\n\n  const handleSearchSubmit = async () => {\n    if (!searchQuery) {\n      alert('Please enter a search query.');\n      return;\n    }\n  \n    try {\n      const response = await fetch(URLServer + '/search', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ query: searchQuery }),\n      });\n  \n      if (response.ok) {\n        const data = await response.json();\n        console.log(data);\n      } else {\n        console.error('Search failed', response);\n      }\n    } catch (error) {\n      console.error('Error during search', error);\n    }\n    findInstancesOfSearchTerm();\n  };\n\n  const onDrop = useCallback((acceptedFiles) => {\n    // Prevents duplicates from being uploaded (based on filename atm)\n    const filteredFiles = acceptedFiles.filter(file => file.type === 'application/pdf');\n    setFiles((prevFiles) => [...prevFiles, ...filteredFiles]);\n\n    // If there's no currently selected PDF, display the first one dropped\n    if (filteredFiles.length && !currentPdf) {\n      setCurrentPdf(filteredFiles[0]);\n    }\n\n    // Filenames that are displayed when file is uploaded\n    setFileNames((prevFiles) => {\n      const newFileNames = filteredFiles.map((file) => file.name);\n      const existingFileNames = new Set(prevFiles);\n      const uniqueNewFileNames = newFileNames.filter((fileName) => !existingFileNames.has(fileName));\n      return [...prevFiles, ...uniqueNewFileNames];\n    });\n  }, [currentPdf]);\n\n  const onDocumentLoadSuccess = ({ numPages }) => {\n    setNumPages(numPages);\n  };\n\n  const removeFile = (fileName, event) => {\n    event.stopPropagation(); // Prevent the event from bubbling up to parent elements\n  \n    setFiles((prevFiles) => prevFiles.filter((file) => file.name !== fileName));\n    setFileNames((prevFileNames) => prevFileNames.filter((name) => name !== fileName));\n  };\n\n  const { getRootProps, getInputProps } = useDropzone({\n    // Only allows pdfs\n    accept: 'application/pdf',\n    onDrop,\n  });\n\n  const uploadFilesToServer = async () => {\n    if (files.length === 0) {\n      alert('Please submit a file.');\n      return;\n    }\n    \n    setShowSearch(true); \n    const formData = new FormData();\n    \n    // Append each file to the form data\n    files.forEach((file) => {\n      formData.append('files', file);\n    });\n\n    console.log(formData);\n\n    try {\n      const response = await fetch(URLServer + '/upload', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (response.ok) {\n        console.log('Files successfully uploaded');\n      } else {\n        console.error('Upload failed', response);\n      }\n    } catch (error) {\n      console.error('Error uploading files', error);\n    }\n  };\n\n  return (\n    <div style={styles.container}>\n      {/* Header */}\n      <header style={styles.header}>\n        <h1 style={styles.title}>AcquiSolar</h1>\n        <a href=\"/about\" style={styles.aboutLink}>About Us</a>\n      </header>\n\n      {/* Main content area */}\n      <div style={styles.mainContent}>\n        {/* File upload area */}\n        <div {...getRootProps({ style: styles.dropzone })}>\n          <input {...getInputProps()} />\n          <div style={styles.uploadHeader}>\n            <p style={styles.uploadText}>Upload Files</p>\n            <button style={styles.addButton}>Add</button>\n          </div>\n          <FileList fileNames={fileNames} removeFile={removeFile} />\n        </div>\n\n        {/* PDF viewer and search functionality */}\n        <PDFViewer \n          showSearch={showSearch} \n          currentPdf={currentPdf} \n          numPages={numPages} \n          searchQuery={searchQuery} \n          handleSearchInputChange={handleSearchInputChange} \n          handleSearchSubmit={handleSearchSubmit} \n          onDocumentLoadSuccess = {onDocumentLoadSuccess}\n          instances={instances}\n          currentInstance={currentInstance}\n          findInstancesOfSearchTerm={findInstancesOfSearchTerm}\n          goToNextInstance={goToNextInstance}\n          goToPreviousInstance={goToPreviousInstance}\n          pageNumber={pageNumber}\n        />\n\n        {/* Instructions for users */}\n        {!showSearch && (\n          <div style={styles.dragTextContainer}>\n            <p style={styles.dragText}>Add your files in the box on the left and click Submit.</p>\n          </div>\n        )}\n      </div>\n\n      {/* Submit button */}\n      {!showSearch && (\n        <button style={styles.submitButton} onClick={uploadFilesToServer}>Submit</button>\n      )}\n    </div>\n  );\n};\n\nconst styles = {\n  container: {\n    fontFamily: 'Arial, sans-serif',\n    height: '100vh',\n    width: '100%',\n    backgroundColor: '#9ACAC4',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n  },\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '20px',\n    color: 'white',\n    fontSize: '24px',\n  },\n  title: {\n    margin: 0,\n  },\n  aboutLink: {\n    color: 'white',\n    textDecoration: 'none',\n    backgroundColor: '#9ACAC4', \n    padding: '5px 10px',\n    borderRadius: '5px', \n  },\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start', \n    padding: '20px',\n    paddingTop: '10px',\n    width: '100%',\n  },\n  dropzone: {\n    padding: '20px',\n    width: '300px',\n    height: '400px',\n    borderRadius: '15px',\n    backgroundColor: '#ffffff',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: '10px',\n  },\n  uploadText: {\n    color: '#000000',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    marginBottom: '10px',\n    fontSize: '18px',\n    fontWeight: 'bold',\n  },\n  submitButton: {\n    padding: '10px 20px',\n    marginLeft: '20px',\n    fontSize: '16px',\n    backgroundColor: '#FFF',\n    border: 'none',\n    borderRadius: '20px',\n    cursor: 'pointer',\n    color: 'black',\n    alignSelf: 'flex-start', \n    fontWeight: 'bold',\n  },\n  addButton: {\n    marginLeft: '10px',\n    padding: '5px 10px',\n    fontSize: '16px',\n    backgroundColor: '#FFF',\n    border: '1px solid #000', \n    borderRadius: '5px',\n    cursor: 'pointer',\n    fontWeight: 'bold',\n  },\n  uploadHeader: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%', \n    padding: '0 20px', \n    marginBottom: '10px', \n  },\n  mainContent: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '20px',\n    paddingTop: '10px',\n  },\n  dragTextContainer: {\n    marginLeft: '20px',\n    fontSize: '24px', \n    marginRight: '15%',\n    fontWeight: 'bold',\n    color: '#FFF',\n    maxWidth: '400px', \n    textAlign: 'left',\n  },\n  \n};\n\nexport default Main;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}