{"ast":null,"code":"import React,{useCallback,useState}from'react';import\"../App.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Main=()=>{const[fileName,setFileName]=useState('');const[pdfText,setPdfText]=useState('');const handleFileUpload=async file=>{const formData=new FormData();formData.append('pdf',file);try{const response=await fetch('/upload',{method:'POST',body:formData});const data=await response.json();setPdfText(data.text);}catch(error){console.error('Error:',error);setPdfText('');}};const handleFileSelect=useCallback(event=>{var _event$dataTransfer;event.preventDefault();// Prevents browser from opening file\nconst file=((_event$dataTransfer=event.dataTransfer)===null||_event$dataTransfer===void 0?void 0:_event$dataTransfer.files[0])||event.target.files[0];if(file&&file.type==='application/pdf'){setFileName(file.name);handleFileUpload(file);}else{console.log('Please upload a PDF file.');}},[]);const onDragOver=event=>{event.preventDefault();};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"drop-box\",onDrop:handleFileSelect,onDragOver:onDragOver,children:[\"Drag and drop a file here or click to select a file\",/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\"application/pdf\",onChange:handleFileSelect,onClick:event=>event.stopPropagation()}),fileName&&/*#__PURE__*/_jsxs(\"p\",{children:[\"File name: \",fileName]})]}),pdfText&&/*#__PURE__*/_jsxs(\"div\",{className:\"pdf-text-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Extracted Text:\"}),/*#__PURE__*/_jsx(\"textarea\",{value:pdfText,readOnly:true})]})]});};export default Main;","map":{"version":3,"names":["React","useCallback","useState","jsx","_jsx","jsxs","_jsxs","Main","fileName","setFileName","pdfText","setPdfText","handleFileUpload","file","formData","FormData","append","response","fetch","method","body","data","json","text","error","console","handleFileSelect","event","_event$dataTransfer","preventDefault","dataTransfer","files","target","type","name","log","onDragOver","className","children","onDrop","accept","onChange","onClick","stopPropagation","value","readOnly"],"sources":["/Users/zararutherford/Documents/AcquiSolar/AcquiSolar/acquisolar/frontend/src/views/main.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\nimport \"../App.css\";\n\nconst Main = () => {\n  const [fileName, setFileName] = useState('');\n  const [pdfText, setPdfText] = useState(''); \n\n  const handleFileUpload = async (file) => {\n    const formData = new FormData();\n    formData.append('pdf', file);\n\n    try {\n      const response = await fetch('/upload', {\n        method: 'POST',\n        body: formData,\n      });\n      const data = await response.json();\n      setPdfText(data.text); \n    } catch (error) {\n      console.error('Error:', error);\n      setPdfText('');\n    }\n  };\n\n  const handleFileSelect = useCallback((event) => {\n    event.preventDefault(); // Prevents browser from opening file\n    const file = event.dataTransfer?.files[0] || event.target.files[0];\n    if (file && file.type === 'application/pdf') {\n      setFileName(file.name);\n      handleFileUpload(file);\n    } else {\n      console.log('Please upload a PDF file.');\n    }\n  }, []);\n\n  const onDragOver = (event) => {\n    event.preventDefault();\n  };\n\n  return (\n<div className=\"container\">\n  <div className=\"drop-box\" onDrop={handleFileSelect} onDragOver={onDragOver}>\n    Drag and drop a file here or click to select a file\n    <input\n      type=\"file\"\n      accept=\"application/pdf\"\n      onChange={handleFileSelect}\n      onClick={(event) => event.stopPropagation()}\n    />\n    {fileName && <p>File name: {fileName}</p>}\n  </div>\n  {/* Text area container for extracted text */}\n  {pdfText && (\n    <div className=\"pdf-text-container\">\n      <h2>Extracted Text:</h2>\n      <textarea value={pdfText} readOnly />\n    </div>\n  )}\n</div>\n  );\n};\n\nexport default Main;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,WAAW,CAAEC,QAAQ,KAAQ,OAAO,CACpD,MAAO,YAAY,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEpB,KAAM,CAAAC,IAAI,CAAGA,CAAA,GAAM,CACjB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACQ,OAAO,CAAEC,UAAU,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAE1C,KAAM,CAAAU,gBAAgB,CAAG,KAAO,CAAAC,IAAI,EAAK,CACvC,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,KAAK,CAAEH,IAAI,CAAC,CAE5B,GAAI,CACF,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,SAAS,CAAE,CACtCC,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEN,QACR,CAAC,CAAC,CACF,KAAM,CAAAO,IAAI,CAAG,KAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAClCX,UAAU,CAACU,IAAI,CAACE,IAAI,CAAC,CACvB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,CAAEA,KAAK,CAAC,CAC9Bb,UAAU,CAAC,EAAE,CAAC,CAChB,CACF,CAAC,CAED,KAAM,CAAAe,gBAAgB,CAAGzB,WAAW,CAAE0B,KAAK,EAAK,KAAAC,mBAAA,CAC9CD,KAAK,CAACE,cAAc,CAAC,CAAC,CAAE;AACxB,KAAM,CAAAhB,IAAI,CAAG,EAAAe,mBAAA,CAAAD,KAAK,CAACG,YAAY,UAAAF,mBAAA,iBAAlBA,mBAAA,CAAoBG,KAAK,CAAC,CAAC,CAAC,GAAIJ,KAAK,CAACK,MAAM,CAACD,KAAK,CAAC,CAAC,CAAC,CAClE,GAAIlB,IAAI,EAAIA,IAAI,CAACoB,IAAI,GAAK,iBAAiB,CAAE,CAC3CxB,WAAW,CAACI,IAAI,CAACqB,IAAI,CAAC,CACtBtB,gBAAgB,CAACC,IAAI,CAAC,CACxB,CAAC,IAAM,CACLY,OAAO,CAACU,GAAG,CAAC,2BAA2B,CAAC,CAC1C,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,UAAU,CAAIT,KAAK,EAAK,CAC5BA,KAAK,CAACE,cAAc,CAAC,CAAC,CACxB,CAAC,CAED,mBACFvB,KAAA,QAAK+B,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBhC,KAAA,QAAK+B,SAAS,CAAC,UAAU,CAACE,MAAM,CAAEb,gBAAiB,CAACU,UAAU,CAAEA,UAAW,CAAAE,QAAA,EAAC,qDAE1E,cAAAlC,IAAA,UACE6B,IAAI,CAAC,MAAM,CACXO,MAAM,CAAC,iBAAiB,CACxBC,QAAQ,CAAEf,gBAAiB,CAC3BgB,OAAO,CAAGf,KAAK,EAAKA,KAAK,CAACgB,eAAe,CAAC,CAAE,CAC7C,CAAC,CACDnC,QAAQ,eAAIF,KAAA,MAAAgC,QAAA,EAAG,aAAW,CAAC9B,QAAQ,EAAI,CAAC,EACtC,CAAC,CAELE,OAAO,eACNJ,KAAA,QAAK+B,SAAS,CAAC,oBAAoB,CAAAC,QAAA,eACjClC,IAAA,OAAAkC,QAAA,CAAI,iBAAe,CAAI,CAAC,cACxBlC,IAAA,aAAUwC,KAAK,CAAElC,OAAQ,CAACmC,QAAQ,MAAE,CAAC,EAClC,CACN,EACE,CAAC,CAEN,CAAC,CAED,cAAe,CAAAtC,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}