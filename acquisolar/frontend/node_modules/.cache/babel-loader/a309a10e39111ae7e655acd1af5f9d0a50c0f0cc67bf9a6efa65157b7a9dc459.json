{"ast":null,"code":"var _jsxFileName = \"/Users/zararutherford/Documents/AcquiSolar/AcquiSolar/acquisolar/frontend/src/views/fileupload.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport \"../styles/styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const onDrop = useCallback(acceptedFiles => {\n    // Assuming you don't want to keep previously accepted files\n    setFiles(acceptedFiles.map(file => file.name));\n  }, []);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop,\n    accept: 'application/pdf'\n  });\n  const handleAnalyzeClick = () => {\n    // Handle the analyze click event\n    console.log('Analyze the files', files);\n    // Redirect to another page or perform the analysis\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [\"AcquiSolar \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"About Us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ...getRootProps({\n        className: 'dropzone'\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Just drag and drop your files. We'll do the rest.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Files:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: files.map(fileName => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: fileName\n        }, fileName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 36\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAnalyzeClick,\n      children: \"Analyze\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"wY2InN3fC+e0tv7Lqw8ivnJ31Qw=\", false, function () {\n  return [useDropzone];\n});\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useCallback","useState","useDropzone","jsxDEV","_jsxDEV","Main","_s","files","setFiles","onDrop","acceptedFiles","map","file","name","getRootProps","getInputProps","accept","handleAnalyzeClick","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/zararutherford/Documents/AcquiSolar/AcquiSolar/acquisolar/frontend/src/views/fileupload.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport \"../styles/styles.css\";\n\nconst Main = () => {\n  const [files, setFiles] = useState([]);\n\n  const onDrop = useCallback(acceptedFiles => {\n    // Assuming you don't want to keep previously accepted files\n    setFiles(acceptedFiles.map(file => file.name));\n  }, []);\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop,\n    accept: 'application/pdf'\n  });\n\n  const handleAnalyzeClick = () => {\n    // Handle the analyze click event\n    console.log('Analyze the files', files);\n    // Redirect to another page or perform the analysis\n  };\n\n  return (\n    <div className=\"file-upload-container\">\n      <header>\n        AcquiSolar <span>About Us</span>\n      </header>\n      <div {...getRootProps({ className: 'dropzone' })}>\n        <input {...getInputProps()} />\n        <p>Just drag and drop your files. We'll do the rest.</p>\n      </div>\n      <aside>\n        <h4>Files:</h4>\n        <ul>{files.map(fileName => <li key={fileName}>{fileName}</li>)}</ul>\n      </aside>\n      <button onClick={handleAnalyzeClick}>Analyze</button>\n    </div>\n  );\n};\n\nexport default Main;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AACpD,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMQ,MAAM,GAAGT,WAAW,CAACU,aAAa,IAAI;IAC1C;IACAF,QAAQ,CAACE,aAAa,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC;EAChD,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM;IAAEC,YAAY;IAAEC;EAAc,CAAC,GAAGb,WAAW,CAAC;IAClDO,MAAM;IACNO,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/B;IACAC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEZ,KAAK,CAAC;IACvC;EACF,CAAC;EAED,oBACEH,OAAA;IAAKgB,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCjB,OAAA;MAAAiB,QAAA,GAAQ,aACK,eAAAjB,OAAA;QAAAiB,QAAA,EAAM;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACTrB,OAAA;MAAA,GAASU,YAAY,CAAC;QAAEM,SAAS,EAAE;MAAW,CAAC,CAAC;MAAAC,QAAA,gBAC9CjB,OAAA;QAAA,GAAWW,aAAa,CAAC;MAAC;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC9BrB,OAAA;QAAAiB,QAAA,EAAG;MAAiD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC,eACNrB,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QAAAiB,QAAA,EAAI;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACfrB,OAAA;QAAAiB,QAAA,EAAKd,KAAK,CAACI,GAAG,CAACW,QAAQ,iBAAIlB,OAAA;UAAAiB,QAAA,EAAoBC;QAAQ,GAAnBA,QAAQ;UAAAA,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAgB,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC,eACRrB,OAAA;MAAQsB,OAAO,EAAET,kBAAmB;MAAAI,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV,CAAC;AAACnB,EAAA,CAnCID,IAAI;EAAA,QAQgCH,WAAW;AAAA;AAAAyB,EAAA,GAR/CtB,IAAI;AAqCV,eAAeA,IAAI;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}