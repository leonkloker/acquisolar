{"ast":null,"code":"var _jsxFileName = \"/Users/zararutherford/Documents/AcquiSolar/AcquiSolar/acquisolar/frontend/src/views/fileupload.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [fullFile, setFullFile] = useState([]);\n\n  /*const onDrop = useCallback((acceptedFiles) => {\n    setFiles((prevFiles) => {\n      const newFileNames = acceptedFiles.map((file) => file.name);\n      const existingFileNames = new Set(prevFiles);\n      const uniqueNewFileNames = newFileNames.filter((fileName) => !existingFileNames.has(fileName));\n      return [...prevFiles, ...uniqueNewFileNames];\n    });\n    setFullFile((prevFiles) => [...prevFiles, ...acceptedFiles]);\n  }, []);*/\n\n  const onDrop = useCallback(acceptedFiles => {\n    setFiles(prevFiles => [...prevFiles, ...acceptedFiles]);\n  }, []);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    type: \"file\",\n    accept: 'application/pdf',\n    onDrop\n  });\n  const uploadFilesToServer = async () => {\n    const formData = new FormData();\n\n    // Append each file to the form data\n    files.forEach(file => {\n      formData.append('files', file);\n    });\n    console.log(formData);\n    try {\n      const response = await fetch('/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        console.log('Files successfully uploaded');\n      } else {\n        console.error('Upload failed', response);\n      }\n    } catch (error) {\n      console.error('Error uploading files', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      style: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: styles.title,\n        children: \"AcquiSolar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/about\",\n        style: styles.aboutLink,\n        children: \"About Us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ...getRootProps({\n          style: styles.dropzone\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: styles.uploadText,\n          children: \"Upload Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles.analyzeButton,\n        onClick: uploadFilesToServer,\n        children: \"Analyze\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n//           <div style={styles.fileListContainer}>\n_s(Main, \"Vmf8WHyjoBDet798xSLGPgxWx1Y=\", false, function () {\n  return [useDropzone];\n});\n_c = Main;\n{/* <p style={{ margin: 0 }}>Files:</p>\n <ul style={styles.fileList}>\n  \n  {files.map((fileName, index) => (\n    <li key={index} style={styles.fileName}>{fileName}</li>\n  ))}\n </ul>\n </div> */}\nconst styles = {\n  container: {\n    fontFamily: 'Arial, sans-serif',\n    height: '100vh',\n    width: '100%',\n    backgroundColor: '#9ACAC4',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start' // Align content to the top\n  },\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '20px',\n    color: 'white',\n    fontSize: '24px'\n  },\n  title: {\n    margin: 0\n  },\n  aboutLink: {\n    color: 'white',\n    textDecoration: 'none',\n    backgroundColor: '#9ACAC4',\n    // Match the header background color\n    padding: '5px 10px',\n    // Add some padding\n    borderRadius: '5px' // Optional: add some rounding to match your design\n  },\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    // Align dropzone to the left\n    padding: '20px',\n    width: '100%' // Make sure content takes the full width\n  },\n  dropzone: {\n    padding: '20px',\n    width: '300px',\n    height: 'auto',\n    borderRadius: '20px',\n    backgroundColor: '#ffffff',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: '10px'\n  },\n  uploadText: {\n    color: '#000000',\n    marginBottom: '20px',\n    fontSize: '18px',\n    fontWeight: 'bold'\n  },\n  fileListContainer: {\n    width: '100%',\n    backgroundColor: '#E6F0EF',\n    borderRadius: '10px',\n    padding: '10px',\n    textAlign: 'left',\n    maxHeight: '150px',\n    overflowY: 'auto' // Allow scrolling for multiple files\n  },\n  fileList: {\n    listStyleType: 'none',\n    padding: 0,\n    margin: 0\n  },\n  fileName: {\n    color: '#000000',\n    fontSize: '16px',\n    lineHeight: '24px',\n    padding: '5px 0'\n  },\n  analyzeButton: {\n    padding: '10px 20px',\n    fontSize: '16px',\n    backgroundColor: '#FFF',\n    border: 'none',\n    borderRadius: '20px',\n    cursor: 'pointer',\n    color: 'black',\n    alignSelf: 'flex-start' // Align the button to the left\n  }\n};\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useCallback","useState","useDropzone","jsxDEV","_jsxDEV","Main","_s","files","setFiles","fullFile","setFullFile","onDrop","acceptedFiles","prevFiles","getRootProps","getInputProps","type","accept","uploadFilesToServer","formData","FormData","forEach","file","append","console","log","response","fetch","method","body","ok","error","style","styles","container","children","header","title","fileName","_jsxFileName","lineNumber","columnNumber","href","aboutLink","content","dropzone","uploadText","analyzeButton","onClick","_c","fontFamily","height","width","backgroundColor","display","flexDirection","justifyContent","alignItems","padding","color","fontSize","margin","textDecoration","borderRadius","marginBottom","fontWeight","fileListContainer","textAlign","maxHeight","overflowY","fileList","listStyleType","lineHeight","border","cursor","alignSelf","$RefreshReg$"],"sources":["/Users/zararutherford/Documents/AcquiSolar/AcquiSolar/acquisolar/frontend/src/views/fileupload.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\n\nconst Main = () => {\n  const [files, setFiles] = useState([]);\n  const [fullFile, setFullFile] = useState([]);\n\n  /*const onDrop = useCallback((acceptedFiles) => {\n    setFiles((prevFiles) => {\n      const newFileNames = acceptedFiles.map((file) => file.name);\n      const existingFileNames = new Set(prevFiles);\n      const uniqueNewFileNames = newFileNames.filter((fileName) => !existingFileNames.has(fileName));\n      return [...prevFiles, ...uniqueNewFileNames];\n    });\n    setFullFile((prevFiles) => [...prevFiles, ...acceptedFiles]);\n  }, []);*/\n\n  const onDrop = useCallback((acceptedFiles) => {\n    setFiles((prevFiles) => [...prevFiles, ...acceptedFiles]);\n  }, []);\n\n  const { getRootProps, getInputProps } = useDropzone({\n    type:\"file\",\n    accept: 'application/pdf',\n    onDrop,\n  });\n\n  const uploadFilesToServer = async () => {\n    const formData = new FormData();\n    \n    // Append each file to the form data\n    files.forEach((file) => {\n      formData.append('files', file);\n    });\n\n    console.log(formData);\n\n    try {\n      const response = await fetch('/upload', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (response.ok) {\n        console.log('Files successfully uploaded');\n      } else {\n        console.error('Upload failed', response);\n      }\n    } catch (error) {\n      console.error('Error uploading files', error);\n    }\n  };\n\n  return (\n    <div style={styles.container}>\n      <header style={styles.header}>\n        <h1 style={styles.title}>AcquiSolar</h1>\n        <a href=\"/about\" style={styles.aboutLink}>About Us</a>\n      </header>\n      <div style={styles.content}>\n        <div {...getRootProps({ style: styles.dropzone })}>\n          <input {...getInputProps()} />\n          <p style={styles.uploadText}>Upload Files</p>\n\n        </div>\n        <button style={styles.analyzeButton} onClick={uploadFilesToServer}>Analyze</button>\n      </div>\n    </div>\n  );\n};\n\n\n//           <div style={styles.fileListContainer}>\n{/* <p style={{ margin: 0 }}>Files:</p>\n<ul style={styles.fileList}>\n  \n  {files.map((fileName, index) => (\n    <li key={index} style={styles.fileName}>{fileName}</li>\n  ))}\n</ul>\n</div> */}\nconst styles = {\n  container: {\n    fontFamily: 'Arial, sans-serif',\n    height: '100vh',\n    width: '100%',\n    backgroundColor: '#9ACAC4',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start', // Align content to the top\n  },\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '20px',\n    color: 'white',\n    fontSize: '24px',\n  },\n  title: {\n    margin: 0,\n  },\n  aboutLink: {\n    color: 'white',\n    textDecoration: 'none',\n    backgroundColor: '#9ACAC4', // Match the header background color\n    padding: '5px 10px', // Add some padding\n    borderRadius: '5px', // Optional: add some rounding to match your design\n  },\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start', // Align dropzone to the left\n    padding: '20px',\n    width: '100%', // Make sure content takes the full width\n  },\n  dropzone: {\n    padding: '20px',\n    width: '300px',\n    height: 'auto',\n    borderRadius: '20px',\n    backgroundColor: '#ffffff',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: '10px',\n  },\n  uploadText: {\n    color: '#000000',\n    marginBottom: '20px',\n    fontSize: '18px',\n    fontWeight: 'bold',\n  },\n  fileListContainer: {\n    width: '100%',\n    backgroundColor: '#E6F0EF',\n    borderRadius: '10px',\n    padding: '10px',\n    textAlign: 'left',\n    maxHeight: '150px',\n    overflowY: 'auto', // Allow scrolling for multiple files\n  },\n  fileList: {\n    listStyleType: 'none',\n    padding: 0,\n    margin: 0,\n  },\n  fileName: {\n    color: '#000000',\n    fontSize: '16px',\n    lineHeight: '24px',\n    padding: '5px 0',\n  },\n  analyzeButton: {\n    padding: '10px 20px',\n    fontSize: '16px',\n    backgroundColor: '#FFF',\n    border: 'none',\n    borderRadius: '20px',\n    cursor: 'pointer',\n    color: 'black',\n    alignSelf: 'flex-start', // Align the button to the left\n  },\n};\n\nexport default Main;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AACpD,SAASC,WAAW,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAE5C;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE,MAAMU,MAAM,GAAGX,WAAW,CAAEY,aAAa,IAAK;IAC5CJ,QAAQ,CAAEK,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAE,GAAGD,aAAa,CAAC,CAAC;EAC3D,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM;IAAEE,YAAY;IAAEC;EAAc,CAAC,GAAGb,WAAW,CAAC;IAClDc,IAAI,EAAC,MAAM;IACXC,MAAM,EAAE,iBAAiB;IACzBN;EACF,CAAC,CAAC;EAEF,MAAMO,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;;IAE/B;IACAb,KAAK,CAACc,OAAO,CAAEC,IAAI,IAAK;MACtBH,QAAQ,CAACI,MAAM,CAAC,OAAO,EAAED,IAAI,CAAC;IAChC,CAAC,CAAC;IAEFE,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;IAErB,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,SAAS,EAAE;QACtCC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEV;MACR,CAAC,CAAC;MAEF,IAAIO,QAAQ,CAACI,EAAE,EAAE;QACfN,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC5C,CAAC,MAAM;QACLD,OAAO,CAACO,KAAK,CAAC,eAAe,EAAEL,QAAQ,CAAC;MAC1C;IACF,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdP,OAAO,CAACO,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,oBACE3B,OAAA;IAAK4B,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,gBAC3B/B,OAAA;MAAQ4B,KAAK,EAAEC,MAAM,CAACG,MAAO;MAAAD,QAAA,gBAC3B/B,OAAA;QAAI4B,KAAK,EAAEC,MAAM,CAACI,KAAM;QAAAF,QAAA,EAAC;MAAU;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxCrC,OAAA;QAAGsC,IAAI,EAAC,QAAQ;QAACV,KAAK,EAAEC,MAAM,CAACU,SAAU;QAAAR,QAAA,EAAC;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACTrC,OAAA;MAAK4B,KAAK,EAAEC,MAAM,CAACW,OAAQ;MAAAT,QAAA,gBACzB/B,OAAA;QAAA,GAASU,YAAY,CAAC;UAAEkB,KAAK,EAAEC,MAAM,CAACY;QAAS,CAAC,CAAC;QAAAV,QAAA,gBAC/C/B,OAAA;UAAA,GAAWW,aAAa,CAAC;QAAC;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC9BrC,OAAA;UAAG4B,KAAK,EAAEC,MAAM,CAACa,UAAW;UAAAX,QAAA,EAAC;QAAY;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE1C,CAAC,eACNrC,OAAA;QAAQ4B,KAAK,EAAEC,MAAM,CAACc,aAAc;QAACC,OAAO,EAAE9B,mBAAoB;QAAAiB,QAAA,EAAC;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;;AAGD;AAAAnC,EAAA,CArEMD,IAAI;EAAA,QAkBgCH,WAAW;AAAA;AAAA+C,EAAA,GAlB/C5C,IAAI;AAsEV,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,UAPC;AAQD,MAAM4B,MAAM,GAAG;EACbC,SAAS,EAAE;IACTgB,UAAU,EAAE,mBAAmB;IAC/BC,MAAM,EAAE,OAAO;IACfC,KAAK,EAAE,MAAM;IACbC,eAAe,EAAE,SAAS;IAC1BC,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE,QAAQ;IACvBC,cAAc,EAAE,YAAY,CAAE;EAChC,CAAC;EACDpB,MAAM,EAAE;IACNkB,OAAO,EAAE,MAAM;IACfE,cAAc,EAAE,eAAe;IAC/BC,UAAU,EAAE,QAAQ;IACpBC,OAAO,EAAE,MAAM;IACfC,KAAK,EAAE,OAAO;IACdC,QAAQ,EAAE;EACZ,CAAC;EACDvB,KAAK,EAAE;IACLwB,MAAM,EAAE;EACV,CAAC;EACDlB,SAAS,EAAE;IACTgB,KAAK,EAAE,OAAO;IACdG,cAAc,EAAE,MAAM;IACtBT,eAAe,EAAE,SAAS;IAAE;IAC5BK,OAAO,EAAE,UAAU;IAAE;IACrBK,YAAY,EAAE,KAAK,CAAE;EACvB,CAAC;EACDnB,OAAO,EAAE;IACPU,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE,QAAQ;IACvBE,UAAU,EAAE,YAAY;IAAE;IAC1BC,OAAO,EAAE,MAAM;IACfN,KAAK,EAAE,MAAM,CAAE;EACjB,CAAC;EACDP,QAAQ,EAAE;IACRa,OAAO,EAAE,MAAM;IACfN,KAAK,EAAE,OAAO;IACdD,MAAM,EAAE,MAAM;IACdY,YAAY,EAAE,MAAM;IACpBV,eAAe,EAAE,SAAS;IAC1BC,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE,QAAQ;IACvBE,UAAU,EAAE,QAAQ;IACpBD,cAAc,EAAE,QAAQ;IACxBQ,YAAY,EAAE;EAChB,CAAC;EACDlB,UAAU,EAAE;IACVa,KAAK,EAAE,SAAS;IAChBK,YAAY,EAAE,MAAM;IACpBJ,QAAQ,EAAE,MAAM;IAChBK,UAAU,EAAE;EACd,CAAC;EACDC,iBAAiB,EAAE;IACjBd,KAAK,EAAE,MAAM;IACbC,eAAe,EAAE,SAAS;IAC1BU,YAAY,EAAE,MAAM;IACpBL,OAAO,EAAE,MAAM;IACfS,SAAS,EAAE,MAAM;IACjBC,SAAS,EAAE,OAAO;IAClBC,SAAS,EAAE,MAAM,CAAE;EACrB,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAa,EAAE,MAAM;IACrBb,OAAO,EAAE,CAAC;IACVG,MAAM,EAAE;EACV,CAAC;EACDvB,QAAQ,EAAE;IACRqB,KAAK,EAAE,SAAS;IAChBC,QAAQ,EAAE,MAAM;IAChBY,UAAU,EAAE,MAAM;IAClBd,OAAO,EAAE;EACX,CAAC;EACDX,aAAa,EAAE;IACbW,OAAO,EAAE,WAAW;IACpBE,QAAQ,EAAE,MAAM;IAChBP,eAAe,EAAE,MAAM;IACvBoB,MAAM,EAAE,MAAM;IACdV,YAAY,EAAE,MAAM;IACpBW,MAAM,EAAE,SAAS;IACjBf,KAAK,EAAE,OAAO;IACdgB,SAAS,EAAE,YAAY,CAAE;EAC3B;AACF,CAAC;AAED,eAAetE,IAAI;AAAC,IAAA4C,EAAA;AAAA2B,YAAA,CAAA3B,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}