{"ast":null,"code":"var _jsxFileName = \"/Users/zararutherford/Documents/AcquiSolar/AcquiSolar/acquisolar/frontend/src/views/folderscreen.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState } from 'react';\nimport '../styles/folderscreen.css';\n\n// Example dictionary of folders and files\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFolders = {\n  'Documents': ['doc1.txt', 'doc2.txt', 'report.pdf'],\n  'Photos': ['photo1.jpg', 'photo2.png'],\n  'Music': ['song1.mp3', 'song2.wav', 'album1.zip']\n};\nconst FolderIcon = ({\n  name,\n  fileCount,\n  onView\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"folder-icon\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"folder-info\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"folder-icon.png\",\n      alt: \"Folder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [fileCount, \" files\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onView,\n    children: \"Open\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 3\n}, this);\n_c = FolderIcon;\nconst Folder = () => {\n  _s();\n  const [folders, setFolders] = useState(initialFolders);\n  const handleViewFolder = folderName => {\n    // Logic to navigate to the folder's content view\n    // For now, we'll just log the folder name to the console\n    console.log(`Viewing contents of ${folderName}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Folder Viewer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"folder-grid\",\n        children: Object.keys(folders).map(folderName => /*#__PURE__*/_jsxDEV(FolderIcon, {\n          name: folderName,\n          fileCount: folders[folderName].length,\n          onView: () => handleViewFolder(folderName)\n        }, folderName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Folder, \"LNB9+1KC/CvP1ANOURu90+J53nE=\");\n_c2 = Folder;\nexport default Folder;\nvar _c, _c2;\n$RefreshReg$(_c, \"FolderIcon\");\n$RefreshReg$(_c2, \"Folder\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","initialFolders","FolderIcon","name","fileCount","onView","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","Folder","_s","folders","setFolders","handleViewFolder","folderName","console","log","Object","keys","map","length","_c2","$RefreshReg$"],"sources":["/Users/zararutherford/Documents/AcquiSolar/AcquiSolar/acquisolar/frontend/src/views/folderscreen.js"],"sourcesContent":["// App.js\nimport React, { useState } from 'react';\nimport '../styles/folderscreen.css';\n\n// Example dictionary of folders and files\nconst initialFolders = {\n  'Documents': ['doc1.txt', 'doc2.txt', 'report.pdf'],\n  'Photos': ['photo1.jpg', 'photo2.png'],\n  'Music': ['song1.mp3', 'song2.wav', 'album1.zip'],\n};\n\nconst FolderIcon = ({ name, fileCount, onView }) => (\n  <div className=\"folder-icon\">\n    <div className=\"folder-info\">\n      <img src=\"folder-icon.png\" alt=\"Folder\" />\n      <p>{name}</p>\n      <p>{fileCount} files</p>\n    </div>\n    <button onClick={onView}>Open</button>\n  </div>\n);\n\nconst Folder = () =>  {\n  const [folders, setFolders] = useState(initialFolders);\n\n  const handleViewFolder = (folderName) => {\n    // Logic to navigate to the folder's content view\n    // For now, we'll just log the folder name to the console\n    console.log(`Viewing contents of ${folderName}`);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Folder Viewer</h1>\n        <div className=\"folder-grid\">\n          {Object.keys(folders).map((folderName) => (\n            <FolderIcon\n              key={folderName}\n              name={folderName}\n              fileCount={folders[folderName].length}\n              onView={() => handleViewFolder(folderName)}\n            />\n          ))}\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default Folder;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}